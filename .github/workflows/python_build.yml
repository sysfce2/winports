name: Build Python
run-name: Build Python

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019

    concurrency:
      group: '${{ github.head_ref }}-windows-x64'
      cancel-in-progress: true

    steps:
      - name: Set build directory
        run: |
          $pattern = '[\\]'
          $BUILD_DIR = $env:GITHUB_WORKSPACE -replace $pattern, '/'
          echo "G_WORKSPACE=${BUILD_DIR}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Checkout repo
        if: ${{ true }}
        uses: actions/checkout@v3
        with:
          repository: python/cpython
          ref: v3.11.3
          path: cpython

      - name: Build
        if: ${{ true }}
        shell: cmd
        run: |
          cd "%GITHUB_WORKSPACE%\cpython"
          PCbuild\build.bat -e -v -c Release -p Win32

      - name: Fake Build
        if: ${{ false }}
        shell: bash
        run: |
          mkdir -p "$G_WORKSPACE/cpython/PCbuild/win32"
          cd "$G_WORKSPACE/cpython/PCbuild/win32"
          echo "dummy" > "test.txt"
          echo "dummy" > "test.pdb"
          mkdir "mydir"
          echo "dummy" > "mydir/test2.txt"
          echo "dummy" > "mydir/test2.pdb"

      - name: Make artifact
        if: ${{ true }}
        shell: bash
        run: |
          set -e
          NAME=Python
          mkdir -p "${G_WORKSPACE}/artifact"
          mkdir -p "${G_WORKSPACE}/artifact/DLLs"
          mkdir -p "${G_WORKSPACE}/artifact/include"
          mkdir -p "${G_WORKSPACE}/artifact/Lib"
          mkdir -p "${G_WORKSPACE}/artifact/libs"

          echo "Copy built files..."
          cd "$G_WORKSPACE/cpython/PCbuild/win32"
          shopt -s globstar
          rm -f pybuilddir.txt _test*.* _freeze*.*
          rm -f -r -- **/*.pdb
          rm -f -r -- **/*.exp
          cp -a --parents *.exe *.txt py*.dll vcruntime*.dll "${G_WORKSPACE}/artifact"
          rm py*.dll vcruntime*.dll
          cp -a --parents *.dll "${G_WORKSPACE}/artifact/DLLs"
          cp -a --parents *.lib "${G_WORKSPACE}/artifact/libs"

          echo "artifact_name=$NAME" >> "$GITHUB_ENV"

      - name: ${{ format('Upload artifact {0}', env.artifact_name) }}
        if: ${{ true }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: artifact
          if-no-files-found: error
